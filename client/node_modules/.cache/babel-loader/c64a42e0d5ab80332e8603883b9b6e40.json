{"ast":null,"code":"import _slicedToArray from \"/Users/josh/Desktop/chat-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/josh/Desktop/chat-app/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, ({\n      error\n    }) => {\n      alert(error);\n    });\n  }, [ENDPOINT, location.search]);\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Chat\");\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/josh/Desktop/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","ENDPOINT","parse","search","emit","error","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACHN,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,QACpBO,IADoB;AAAA,QACdC,OADc;;AAAA,qBAEHR,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,QAEpBS,IAFoB;AAAA,QAEdC,OAFc;;AAG3B,QAAMC,QAAQ,GAAG,gBAAjB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AAAA,+BACWC,WAAW,CAACU,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CADX;AAAA,UACJN,IADI,sBACJA,IADI;AAAA,UACEE,IADF,sBACEA,IADF;;AAGZL,IAAAA,MAAM,GAAGD,EAAE,CAACQ,QAAD,CAAX;AAEAH,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ,EAAoB;AAAEP,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoC,CAAC;AAAEM,MAAAA;AAAF,KAAD,KAAe;AACnDC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACC,KAFD;AAGH,GAXQ,EAWN,CAACJ,QAAD,EAAWL,QAAQ,CAACO,MAApB,CAXM,CAAT;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,CArBD;;AAuBA,eAAeR,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room }, ({ error }) => {\n        alert(error);\n        });\n    }, [ENDPOINT, location.search]);\n\n    return ( \n        <h1>Chat</h1>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}